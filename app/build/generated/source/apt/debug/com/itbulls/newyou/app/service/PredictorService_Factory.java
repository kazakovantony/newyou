// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.itbulls.newyou.app.service;

import com.google.gson.Gson;
import dagger.internal.Factory;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

public final class PredictorService_Factory implements Factory<PredictorService> {
  private final Provider<OkHttpClient> httpClientProvider;

  private final Provider<Gson> gsonProvider;

  public PredictorService_Factory(
      Provider<OkHttpClient> httpClientProvider, Provider<Gson> gsonProvider) {
    this.httpClientProvider = httpClientProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public PredictorService get() {
    return new PredictorService(httpClientProvider.get(), gsonProvider.get());
  }

  public static Factory<PredictorService> create(
      Provider<OkHttpClient> httpClientProvider, Provider<Gson> gsonProvider) {
    return new PredictorService_Factory(httpClientProvider, gsonProvider);
  }
}
