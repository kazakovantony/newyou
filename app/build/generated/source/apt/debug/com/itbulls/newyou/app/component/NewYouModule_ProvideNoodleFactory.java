// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.itbulls.newyou.app.component;

import com.itbulls.newyou.app.App;
import com.noodle.Noodle;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class NewYouModule_ProvideNoodleFactory implements Factory<Noodle> {
  private final NewYouModule module;

  private final Provider<App> appProvider;

  public NewYouModule_ProvideNoodleFactory(NewYouModule module, Provider<App> appProvider) {
    this.module = module;
    this.appProvider = appProvider;
  }

  @Override
  public Noodle get() {
    return Preconditions.checkNotNull(
        module.provideNoodle(appProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Noodle> create(NewYouModule module, Provider<App> appProvider) {
    return new NewYouModule_ProvideNoodleFactory(module, appProvider);
  }

  public static Noodle proxyProvideNoodle(NewYouModule instance, App app) {
    return instance.provideNoodle(app);
  }
}
